#include "Levels.zxbas"
#include "DrawPlayer.zxbas"
#include "Environment.zxbas"

'const noEnemies as ubyte = 0

dim playerMove as ubyte = 0
dim playerDirection as ubyte = directionRS
dim playerX as ubyte = 0
dim playerY as ubyte = 0
dim playerFrame as ubyte = 1
dim playerStairsDelay as ubyte = 0
dim playerDead as ubyte = 0
'dim playerDifficulty as ubyte = 0
dim sinkingspeed as ubyte = 0
dim clearAch as ubyte = 0

dim npcMove(2) as ubyte
dim npcDirection(2) as ubyte
dim npcX(2) as ubyte
dim npcY(2) as ubyte
dim npcWorried(2) as ubyte
dim npcFrame(2) as ubyte
dim npcDuration(2) as ubyte

'function RunFire(x as ubyte, y as ubyte) as ubyte
''	if map(y,x)<>10 and map(y,x)<>51 and map(y,x)<>52 and map(y,x)<>73 then map(y,x)=73: return 1
''	return 0
'end function

sub InitLevels()
	InitLevels1()
end sub

function Tick() as ubyte
	return Tick1()
end function

sub SaveLevel(mapNum as ubyte)
	SaveLevel1(mapNum)
end sub

function GetSaved() as ubyte
	return GetSaved1()
end function

sub SubmarineSinking()
	submarinesank=1
	dim x as ubyte
	dim y as ubyte
	for x=0 to 31
		for y=9 to 22
			if map(y,x)<>17 then RedrawArea1(x,y)
		next
	next
end sub

sub DrawLight(x as ubyte, y as ubyte)
	if light=1 then return
	dim x1 as ubyte
	dim y1 as ubyte
	dim x2 as ubyte
	dim y2 as ubyte
	x1=x-3
	if x1>31 then x1=0
	x2=x+3
	if x2>31 then x2=31
	y1=y-3
	if y1>20 then y1=0
	y2=y+3
	if y2>20 then y2=20
	dim i as ubyte
	dim j as ubyte
	dim cl as ubyte
	for i=x1 to x2
		for j=y1 to y2
			cl=0
			if j=y1 or j=y2 then cl=1
			if (i=x1 or i=x2) and i<>0 and i<>31 then cl=1
			'if i=x1 and x1=0 then cl=1
			'if i=x2 and x2=31 then cl=1
			'if cl=1 then print at j,i; paper 0; " ": k=1
			if (i=x or i=x+1 or i=x-1) and (j=y or j=y+1) then cl=1
			if cl=0 then 				
				RedrawArea1(i,j)
			end if 
		next
	next
	SOS()
	ink 1
	dim s as string=" "
	dim k as string="\E"
	if x-3<31 then 
		print at y1,x-3; s
		print at y2,x-3; s
	end if 
	if x-2<31 then 
		print at y1,x-2; "\L"
		print at y2,x-2; "\F"
	end if 
	if x-1<31 then 
		print at y1,x-1; k
		print at y2,x-1; k
	end if 
	if x>=0 then 
		print at y1,x; k
		print at y2,x; k
	end if 
	if x+1<32 then 
		print at y1,x+1; k
		print at y2,x+1; k
	end if 
	if x+2<32 then 
		print at y1,x+2; "\M"
		print at y2,x+2; "\G"
	end if 
	if x+3<32 then 
		print at y1,x+3; s
		print at y2,x+3; s
	end if 
	if x1>0 then 
		print at y1+1,x1; "\I"
		print at y1+2,x1; k
		print at y1+3,x1; k
		print at y1+4,x1; k
		print at y1+5,x1; "\H"
	end if 
	if x2<31 then
		print at y1+1,x2; "\K"
		print at y1+2,x2; k
		print at y1+3,x2; k
		print at y1+4,x2; k
		print at y1+5,x2; "\J"
	end if 
	
	if y1>0 then print at y1-1,x1; "       "
	if y2<20 then print at y2+1,x1; "       "
	if x1>0 then
		print at y1,x1-1; s
		print at y1+1,x1-1; s
		print at y1+2,x1-1; s
		print at y1+3,x1-1; s
		print at y1+4,x1-1; s
		print at y1+5,x1-1; s
		print at y1+6,x1-1; s
	end if 
	if x2<31 then
		print at y1,x2+1; s
		print at y1+1,x2+1; s
		print at y1+2,x2+1; s
		print at y1+3,x2+1; s
		print at y1+4,x2+1; s
		print at y1+5,x2+1; s
		print at y1+6,x2+1; s
	end if 
end sub

sub SetDifficulty(difficulty as ubyte)
	'playerDifficulty = difficulty
	achSW = 0 ' Achievement Seawolf!
	achSOS = 0 ' Achievement SOS!
	achS = 0 ' Achievement Salvation!
	achN = 0 ' Achievement Nemesis!
	achTL = 0
	submarinesank=0
	InitCondition()
	if difficulty=1 then sinkingspeed = 24
	if difficulty=2 then sinkingspeed = 16
	if difficulty=3 then sinkingspeed = 8
	'SetSinkingSpeed1(sinkingspeed)
end sub

sub RespawnPlayer()
	'RedrawArea1(playerX, playerY)
	'RedrawArea1(playerX + 1, playerY)
	'RedrawArea1(playerX - 1, playerY)
	'RedrawArea1(playerX, playerY + 1)
	'RedrawArea1(playerX + 1, playerY + 1)
	'RedrawArea1(playerX - 1, playerY + 1)
	
	playerMove = 0
	playerDead = 0	
	'dim i as ubyte
	DrawPlayer(playerDirection,playerFrame,playerX,playerY,7)
	DrawUI1()
end sub

REM sub ResetLevel()	
	REM DrawLevel(mapNumber)
	REM RespawnPlayer()
REM end sub 
dim mapNumber as ubyte 
sub DrawLevel(mapNum as ubyte)
	'CLS
	'print 0,0; "draw level"
	mapNumber=mapNum
    DrawLevel1(mapNum)
	
end sub

function GetMap() as ubyte
	return mapNumber
end function

sub ClearStatusLine()
	flash 0 
	paper 0
	for i=0 to 31
		print at 21,i; " "
	next
end sub

sub CanCatch(x as ubyte,y as ubyte, shift as ubyte)
	CanCatch1(x,y,shift)
end sub 

sub RemoveRopeIfNecessary()
	RemoveRope2(0)
end sub 

function NPCCanMoveLeft(x as ubyte,y as ubyte) as ubyte
	return CanMoveLeft(x,y)
end function

function NPCCanMoveRight(x as ubyte,y as ubyte) as ubyte
	return CanMoveRight(x,y)
end function
sub ShowAchievements()
	if clearAch = 100 or achSW = 1 or achSOS = 1 or achS = 1 then
		ClearStatusLine()
		clearAch = 0
	end if
	if clearAch>0 then clearAch = clearAch + 1: goto achfinished2		
	ink 6
	flash 1
	if achSW = 1 then
		printat64(21,27): print64(" SEAWOLF! ")
		achSW = 2
		goto achrefresh
	end if
	if achSOS = 1 then
		printat64(21,29): print64(" SOS! ")
		achSOS = 2
		goto achrefresh
	end if
	if achS = 1 then
		printat64(21,26): print64(" SALVATION! ")
		achS = 2
		goto achrefresh
	end if
	if achN = 1 then
		printat64(21,27): print64(" NEMESIS! ")
		achN = 2
		goto achrefresh
	end if
	if light=0 then 
		printat64(21,24): print64(" RESTORE POWER ")
		return
	end if 
	if achSOS=0 then 
		printat64(21,26): print64(" SEND SOS ")
		return
	end if 		
	if achS=0 then 
		printat64(21,23): print64(" SAVE YOUR CREW ")
		return
	end if 	
	if achSW=0 then 
		printat64(21,22): print64(" SINK ENEMY SHIPS ")
		return
	end if 	
	if achTL = 1 then achTL = 2: clearAch = 1: goto achfinished2
	:achfinished
	goto achfinished2
	:achrefresh
	flash 0 
	clearAch = 1
	Shock()
	DrawUI1()
	:achfinished2
end sub 
sub PlayerOrNPCAction(x as ubyte, y as ubyte, direction as ubyte, action as ubyte, move as ubyte, frame as ubyte, color as ubyte, index as ubyte)
	if light=0 then color=1
	'Achievements
	if index = 0 then
		ShowAchievements()
	end if
	
	flash 0
	paper 0
	
	if index=0 and move=0 and action<>actionEmpty and catched=1 then 
		if playerX>0 and playerX<31 then
			if playerY=1 and (direction=directionLS or direction=directionRS) then
				DragBody()
				RemoveRope2(0)
				Evacuate(playerX,playerY+1,playerX+1)
				DrawUI1()
				action=actionEmpty
			else
				MakeRope2(playerX,playerY,action)
			end if 		
		end if 		
	end if 
	
	
	dim i as ubyte
	dim fall as ubyte = 0 
	if index = 0 then 
		fall = CanFall(x,y,1)
	end if 
	if fall = 1 then
		RemoveRope2(1)
		RedrawArea1(x,y)
		RedrawArea1(x - 1,y)
		RedrawArea1(x + 1,y)
		y=y+1
	end if
		
	if move = 1 and frame = 5 then move = 0
	
	if move = 0 and frame = 1 then
		if index = 0 and playerDead = 0 then
			if action = actionR then
				direction = directionRS
				if CanMoveRight(x,y) = 1 then
					move = 1
					direction = directionR
				end if
			end if
			if action = actionL then
				direction = directionLS
				if CanMoveLeft(x,y) = 1 then
					move = 1
					direction = directionL
				end if
			end if
		else
			if index > 0 then
				if action = actionL then
					direction = directionL
					move = 1
				end if
				if action = actionR then
					direction = directionR
					move = 1
				end if
			end if
		end if
	end if

	if direction = directionR or direction = directionL then
	   DrawPlayer(direction,frame,x,y,color)
	else
		if direction <> directionRX and direction <> directionLX then
			DrawPlayer(direction,1,x,y,color)
		end if
	end if


	if move = 0 then
		dim redraw as ubyte = 0
		if action = actionU and index=0 then
			i = ActivateTerminal(x,y)
			if i=1 then action=actionEmpty
			i = ActivateTerminal(x,y+1)
			if i=1 then action=actionEmpty
			redraw=1
		end if 
		if direction = directionR then x = x + 1
		if direction = directionL then x = x - 1

		if direction = directionR then direction = directionRS
		if direction = directionL then direction = directionLS

		if action = actionD and (direction = directionRS or direction = directionR) then direction = directionRD
		if action = actionD and (direction = directionLS or direction = directionL) then direction = directionLD
		if action = actionU and direction = directionRD then direction = directionRS
		if action = actionU and direction = directionLD then direction = directionLS		
		'Stairs
		if action = actionU and CanMoveUpDown(x,y+1) = 1 and index = 0 then
			playerStairsDelay = playerStairsDelay + 1
			if playerStairsDelay = 1 or playerStairsDelay = 2 then
				if direction = directionRS or direction = directionRS2 then direction = directionRS1
				if direction = directionLS or direction = directionLS2 then direction = directionLS1
				redraw = 1: goto finish0
			end if
			if playerStairsDelay = 3 then
				if direction = directionRS or direction = directionRS1 then direction = directionRS2
				if direction = directionLS or direction = directionLS1 then direction = directionLS2
				redraw = 1: goto finish0
			end if
			if playerStairsDelay = 4 then
				playerStairsDelay = 0
				RedrawArea1(x,y + 1)
				RedrawArea1(x + 1,y + 1)
				y = y - 1
				if direction = directionRS or direction = directionRS1 then direction = directionRS2
				if direction = directionLS or direction = directionLS1 then direction = directionLS2
				redraw = 1: goto finish0
			end if
		end if
		if action = actionU and CanMoveUpDown(x,y+1) = 0 and index = 0 then
			if direction = directionRS1 or direction = directionRS2 then direction = directionRS
			if direction = directionLS1 or direction = directionLS2 then direction = directionLS
			redraw = 1: goto finish0
		end if
		if action = actionD and index = 0 and (direction = directionRD or direction = directionLD or direction = directionRS1 or direction = directionRS2 or direction = directionLS1 or direction  = directionLS2) and CanMoveUpDown(x,y +2) = 1 then
			playerStairsDelay = playerStairsDelay + 1
			if playerStairsDelay = 1 or playerStairsDelay = 2 then
				if direction = directionRS or direction = directionRD or direction = directionRS2 then direction = directionRS1
				if direction = directionLS or direction = directionLD or direction = directionLS2 then direction = directionLS1
				redraw = 1: goto finish0
			end if
			if playerStairsDelay = 3 then
				if direction = directionRS or direction = directionRS1 then direction = directionRS2
				if direction = directionLS or direction = directionLS1 then direction = directionLS2
				redraw = 1: goto finish0
			end if
			if playerStairsDelay = 4 then
				playerStairsDelay = 0
				RedrawArea1(x,y)
				y = y + 1
				if direction = directionRS or direction = directionRS1 then direction = directionRS2
				if direction = directionLS or direction = directionRS1 then direction = directionLS2
				redraw = 1: goto finish0
			end if
		end if
		if action = actionD and CanMoveUpDown(x,y +2) = 0 and index = 0 then
			if direction = directionRS1 or direction = directionRS2 then direction = directionRD
			if direction = directionLS1 or direction = directionLS2 then direction = directionLD
			redraw = 1: goto finish0
		end if
		
		finish0:
		if redraw = 1 then 
			DrawPlayer(direction,frame,x,y,color)
			goto finish
		end if 
		
	end if
	
	if direction = directionRX then
		if x = 0 then x = 1
		if frame<5 then
			if map(y + 1,x + 1) = 11 or map(y + 1,x + 1) = 99 then x=x-1
			if map(y + 1,x + 1) = 11 then x=x-1
			if map(y + 1,x) = 11 then x=x+1
		end if 
		DrawPlayer(directionRX,frame,x,y,color)
		'if playerShield>0 then DrawPlayer(playerDirection,playerFrame,playerX,playerY,7)
		if fall = 0 then
			if frame = 5 then
				map(y + 1,x) = 12: map(y + 1,x + 1) = 13
			end if	
		end if 		
		if frame = 5 and index = 0 then playerDead = 1		
	end if
	if direction = directionLX then
		if x = 31 then x = 30
		if frame<5 then
			if map(y + 1,x) = 11 or map(y + 1,x) = 99 then x=x+1
			if map(y + 1,x) = 11 then x=x+1
			if map(y + 1,x + 1) = 11 then x=x-1		
		end if 
		DrawPlayer(directionLX,frame,x,y,color)
		'if playerShield>0 then DrawPlayer(playerDirection,playerFrame,playerX,playerY,7)
		if fall = 0 then
			if frame = 5 then
				map(y + 1,x) = 14: map(y + 1,x + 1) = 15
			end if
		end if 
		if frame = 5 and index = 0 then playerDead = 1
	end if

:finish

	if index = 0 then
		playerMove = move
		playerDirection = direction		
		playerX = x
		playerY = y
		playerFrame = frame
	else
		npcMove(index - 1) = move
		npcDirection(index - 1) = direction
		npcX(index - 1) = x
		npcY(index - 1) = y
		npcFrame(index - 1) = frame
	end if

	'if index = 0 then
		REM dim takenItem as ubyte
		REM takenItem = PlayerTookItem1(playerX,playerY + 1)
		REM if takenItem = 0 then
			REM takenItem = PlayerTookItem1(playerX,playerY +2)
		REM end if
		REM if takenItem = 1 then
			REM if playerLives<99 then
				REM playerLives = playerLives + 1
				REM RefreshUI()
			REM end if
		REM end if
		REM if takenItem = 2 then
			REM if playerAmmo<99 then
				REM playerAmmo = playerAmmo + 1
				REM RefreshUI()
			REM end if
		REM end if
		REM if takenItem = 4 then
			REM if playerShield<99 then
				REM playerShield = playerShield + 1
				REM RefreshUI()
			REM end if
		REM end if
		REM if takenItem = 5 then
			REM playerScull = playerScull + 1
			REM RefreshUI()
			REM Click(): Click(): Click()
		REM end if
		REM if takenItem = 97 then
			REM Environment2()
			REM for i=0 to 6
				REM DrawCar1(2-i,13): DrawCar2(3-i,13): DrawCar3(4-i,13): DrawCar4(5-i,13): print at 13,6-i; "  "
				REM DrawCar5(2-i,14): DrawCar6(3-i,14): DrawCar7(4-i,14): DrawCar8(5-i,14): print at 14,6-i; "  "
				REM beep 0.005, i+2
				REM pause 15-i
			REM next
			REM CLS
			REM if backwardMode = 1 and mapNumber = 1 then
				REM print at 9,8; ink 4; "CONGRATULATIONS!"
				REM print at 11,2; ink 4; "YOU HAVE COMPLETED THE RAID!"
				REM print at 13,2; ink 4; "WANNA TRY HIGHER DIFFICULTY?"
				REM Click():Click():Click()
				REM PlayMusic()
				REM pause 0
				REM Click()
				REM playerLives  = 0
				REM playerAmmo = 10
				REM playerShield = 10
				REM playerDead = 0
				REM playerFrags = 0
				REM CLS: goto drawmenu
			REM end if 
		REM end if 
		REM if takenItem = 99 then
			REM if backwardMode = 0 and mapNumber = 10 then
				REM backwardMode = 1
			REM end if
			REM if backwardMode = 0 then
				REM mapNumber = mapNumber + 1
				REM else
				REM mapNumber = mapNumber -1
			REM end if
			REM DrawLevel(mapNumber)
			REM RespawnPlayer()
		REM end if
		'dim larmor as ubyte
		'dim llife as ubyte
		'dim lammo as ubyte
		'if direction = directionRD or direction = directionLD then
		''	larmor = rnd*(3-playerDifficulty) + 2
		''	if rnd*5 = 1 then llife = rnd*2
		''	'if playerDifficulty > 1 then llife = 0
		''	lammo = rnd*4 + playerDifficulty + 1
		''	if PlayerSearch1(playerX,playerY + 1,larmor,lammo,llife) = 1 then
		''		playerAmmo = playerAmmo + lammo
		''		if playerAmmo>99 then playerAmmo = 99
		''		playerLives = playerLives + llife
		''		if playerLives>99 then playerLives = 99
		''		playerShield = playerShield + larmor
		''		if playerShield>99 then playerShield = 99
		''		RefreshUI()
		''		'DrawPlayer(playerDirection,playerFrame,playerX,playerY,7)
		''	end if
		'end if
	'end if
end sub

sub RefreshUI()
	DrawUI1()
	beep 0.005,0.01
end sub

sub StepSound()
	'beep 0.0005,3
	beep 0.0003,1
end sub

sub StepSound2()
	beep 0.0003,2
	'beep 0.0003,1
end sub



