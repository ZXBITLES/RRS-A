#include "Nose.zxbas"
#include <scroll.bas>

dim keyLeft as uinteger
dim keyRight as uinteger
dim keyUp as uinteger
dim keyDown as uinteger
dim keyFire as uinteger
dim map(20,31) as ubyte
'dim mapa(20,31) as ubyte
'dim mapb(20,31) as ubyte
'dim mapc(20,31) as ubyte
dim map2(20,31) as ubyte
dim catched as ubyte = 0
'dim sinkingspeed1 as ubyte

dim sourcemap(18,31) as ubyte => {_
{00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,116,00,00,00,00,00,00,00,116,00,00},_
{00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,53,50,50,50,06,50,54,00,00,00},_
{00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,51,00,18,00,06,00,52,00,00,00},_
{00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,51,222,00,00,06,00,52,00,00,00},_
{17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,58,16,16,16,06,16,59,17,17,17},_
{17,17,17,17,17,17,17,17,17,55,55,55,55,55,55,55,55,55,55,17,17,17,51,00,00,00,06,00,52,17,17,17},_
{17,17,17,17,17,17,17,17,53,07,07,07,07,07,07,07,07,07,07,54,17,17,51,76,00,00,06,222,52,17,17,17},_
{17,17,53,50,50,50,50,50,51,01,01,01,01,01,01,01,01,01,01,52,17,17,58,16,06,16,16,16,59,17,17,17},_
{50,61,56,00,00,00,00,00,51,02,02,02,02,02,02,02,02,02,02,52,50,50,56,00,06,00,00,00,57,50,61,50},_
{60,10,60,00,00,00,18,00,51,03,03,03,03,03,03,03,03,03,03,52,73,18,00,00,06,00,00,00,00,60,10,60},_
{00,10,00,76,76,19,21,222,51,04,04,04,04,04,04,04,04,04,04,52,74,75,00,00,06,00,00,00,00,00,10,00},_
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,06,16,16,16,16,16},_
{00,00,60,10,60,00,00,00,00,00,00,73,00,00,00,00,00,00,00,00,60,10,60,00,00,00,06,60,10,60,00,00},_
{00,00,00,10,00,08,09,08,09,08,09,74,75,08,09,08,09,08,09,00,00,10,00,00,00,00,06,00,10,00,00,00},_
{16,06,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,06,16,16,16,16,16,16,16,16,16,16,16,16},_
{00,06,60,10,60,00,00,00,73,00,18,00,00,00,00,84,84,00,70,06,60,10,60,00,84,00,84,00,18,00,70,00},_
{00,06,00,10,00,19,21,20,74,75,00,19,21,20,00,85,85,71,72,06,00,10,00,00,85,00,85,00,00,71,72,00},_
{62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62},_
{17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17}}

dim sourcemap2(14,31) as ubyte => {_
{17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},_
{17,17,17,86,67,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},_
{17,17,17,87,88,66,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},_
{17,17,17,89,90,67,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},_
{17,17,17,89,91,65,66,17,17,17,17,17,17,17,17,17,17,17,17,17,53,50,50,50,50,50,50,50,50,50,61,50},_
{17,17,17,89,92,93,67,17,17,17,17,17,17,17,53,61,50,50,50,53,56,00,18,00,00,00,00,00,00,60,10,60},_
{17,17,17,94,95,96,65,53,50,50,50,61,50,50,56,06,00,23,00,51,22,22,77,22,22,00,00,00,00,00,10,00},_
{17,17,68,97,98,99,100,51,00,00,00,06,00,00,00,06,00,00,00,16,16,16,16,16,16,16,16,16,06,16,16,16},_
{17,17,69,101,102,103,104,51,00,00,00,06,00,18,00,06,16,16,16,16,00,00,06,00,00,00,00,00,06,60,10,60},_
{17,17,17,105,106,107,65,62,62,62,80,06,00,00,00,06,60,10,60,06,00,00,06,00,00,00,00,00,06,00,10,00},_
{17,17,17,89,108,109,64,17,17,17,81,62,62,62,80,06,00,10,00,06,00,00,06,16,16,16,16,16,06,16,16,16},_
{17,17,17,89,110,63,17,17,17,17,17,17,17,17,81,62,62,62,80,06,00,00,06,00,18,00,00,00,06,60,10,60},_
{17,17,17,111,112,64,17,17,17,17,17,17,17,17,17,17,17,17,81,62,62,80,06,00,76,76,76,00,06,00,10,00},_
{17,17,17,113,63,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,81,62,62,62,62,62,62,62,62,62,62},_
{17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17}}

dim sourcemap3(14,31) as ubyte => {_
{17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},_
{17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},_
{17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},_
{17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},_
{50,50,50,61,50,50,50,61,50,50,50,50,50,50,50,50,50,50,50,61,114,114,114,114,114,114,114,17,17,17,17,17},_
{18,00,60,10,60,00,60,10,60,00,00,00,84,84,84,00,00,15,60,10,60,82,83,00,114,114,114,114,114,17,17,17},_
{00,00,00,10,00,00,00,10,00,76,76,76,85,85,85,00,19,21,00,10,00,82,83,00,114,114,114,114,114,114,114,17},_
{16,16,16,16,16,06,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,114,114,114,114,114,114,114,17},_
{18,00,60,10,60,06,60,10,60,00,84,84,84,84,84,00,00,15,60,10,60,82,83,114,114,114,114,114,114,114,114,17},_
{00,00,00,10,00,06,00,10,00,00,85,85,85,85,85,00,19,21,00,10,00,82,83,114,114,114,114,114,114,114,114,17},_
{16,06,16,16,16,06,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,114,114,114,114,114,114,114,114,17},_
{00,06,60,10,60,06,60,10,60,00,18,00,00,18,00,18,00,00,15,00,114,82,83,114,114,114,114,114,114,114,114,17},_
{00,06,00,10,00,06,00,10,00,00,21,20,19,21,00,21,20,19,21,00,114,114,114,114,114,114,114,114,114,114,17,17},_
{62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,114,114,114,114,114,114,114,17,17,17,17,17},_
{17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17}}

dim achSW as ubyte = 0 ' Achievement Seawolf!
dim achSOS as ubyte = 0 ' Achievement SOS!
dim achS as ubyte = 0 ' Achievement Salvation!
dim achN as ubyte = 0 ' Achievement Nemesis!
dim achTL as ubyte = 0

dim light as ubyte = 0

dim enemyships as ubyte=0
dim time as ubyte=255
dim torpcount as ubyte=10
dim saved as ubyte=0
dim submarinesank as ubyte=0

sub InitCondition()
	enemyships=0
	time=255
	torpcount=10
	saved=0
	light=0
end sub

function CanHit(x1 as ubyte, y1 as ubyte, x2 as ubyte) as ubyte
	dim i as ubyte
	dim temp as ubyte
	for i=x1 to x2
		temp=map(y1,i)
		'or temp=52
		if temp=10 or temp=51 then return 0
	next i
	return 1
end function

function Tick1() as ubyte
	if time>0 then
		if light=1 then time=time-1
	end if 
	DrawTime()
	return time
end function

'function GetPaper(x as ubyte,y as ubyte) as ubyte
''	if map(y,x)=17 then 
''		return 1
''	else
''		return 0
''	end if 
'end function

function GetSaved1() as ubyte
	return saved
end function

function CanDraw(x as ubyte, y as ubyte) as ubyte
	if y<0 or x<0 or y>20 or x>31 then return 0
	return 1
end function

sub DrawUI1()
	dim i as ubyte = 17
	dim j as ubyte = 22
	paper 0
	Achievement()
	if achSW = 2 then print at j,i; ink 1; "\A": i=i+2
	if achSOS = 2 then print at j,i; ink 5; "\B": i=i+2
	if achS = 2 then print at j,i; ink 2; "\C": i=i+2
	if achN = 2 then print at j,i; ink 7; "\D": i=i+2
	
	Environment()
	paper 0
	print at j,4; ink 5; "\J"		
	print at j,8; ink 2; "\L"	
	ink 7
	print at j,0; "\I"	
	Environment6()	
	'print at 22,12; "\A\B"		
	printat64(j,2)
	print64(STR(saved)+"/5")
	printat64(j,18)
	print64(STR(enemyships)+"/5")
	printat64(j,28)
	'if torpcount=10 then 
	''	print64(STR(torpcount))
	'else
	''	print64("0"+STR(torpcount))
	'end if 
	DrawTime()
end sub

sub DrawTime()
	paper 0
	printat64(22,10)
	ink 7
	if time>99 then print64(str(time))
	if time<100 and time>10 then print64("0"+str(time))
	if time<10 then print64("00"+str(time))	
end sub

dim x1 as ubyte
dim y1 as ubyte

sub InitLevels1()
	time = 255
	for x1=0 to 31
		for y1=0 to 18
			if sourcemap(y1,x1) = 11 then sourcemap(y1,x1) = 10
			if y1<15 then
				if sourcemap2(y1,x1) = 11 then sourcemap2(y1,x1) = 10
				if sourcemap3(y1,x1) = 11 then sourcemap3(y1,x1) = 10
			end if 
		next
	next
	sourcemap2(6,22)=77
	
	sourcemap(15,30)=70
	sourcemap(16,30)=72
	sourcemap(16,29)=71

	sourcemap(15,18)=70
	sourcemap(16,18)=72
	sourcemap(16,17)=71

	sourcemap(15,8)=73
	sourcemap(16,8)=74
	sourcemap(16,9)=75

	sourcemap(12,11)=73
	sourcemap(13,11)=74
	sourcemap(13,12)=75

	sourcemap(9,20)=73
	sourcemap(10,20)=74
	sourcemap(10,21)=75
end sub 

sub SaveLevel1(mapNum as ubyte)
	RemoveRope2(0)
	for x1=0 to 31
		for y1=0 to 20
			if mapNum=1 then 
				if y1>1 then sourcemap(y1-2,x1) = map(y1,x1)
			end if 
			if y1>5 then
				if mapNum=2 then sourcemap2(y1-6,x1) = map(y1,x1)
				if mapNum=3 then sourcemap3(y1-6,x1) = map(y1,x1)
			end if 
		next
	next
end sub

sub DrawLevel1(mapNum as ubyte)
	paper 0
	cls
	'print at 12,11; ink 4; "GET READY" 
	'flash 0
	'saved=0
	'Generate map	
	dim mt as ubyte 
	for x1=0 to 31
		for y1=0 to 20
			if mapNum=1 then 
				if y1>1 then map(y1,x1) = sourcemap(y1-2,x1) 
			end if 
			if y1>5 then 
				if mapNum=2 then map(y1,x1) = sourcemap2(y1-6,x1) 
				if mapNum=3 then map(y1,x1) = sourcemap3(y1-6,x1) 
			else
				if mapNum=2 or mapNum=3 then map(y1,x1) = 0				
			end if 
			map2(y1,x1) = 0
		next
	next

	if mapNum=2 then
		if achSW=2 and achSOS=2 and achS=2 then
			map(12,11)=6
		end if 
	end if 
	
	if light=0 then return 

	for x1=0 to 31
		for y1=0 to 22
			if y1<21 then
				RedrawArea1(x1,y1)
				if mapNum=3 then
					if y1=10 and x1=20 then
						DrawNose1(x1,y1)
					end if 
					if y1=11 and x1=24 then
						DrawNose2(x1,y1)
					end if 
					if y1=12 and x1=24 then
						DrawNose3(x1,y1)
					end if
					if y1=13 and x1=24 then
						DrawNose4(x1,y1)
					end if 
					if y1=14 and x1=23 then
						DrawNose5(x1,y1)
					end if
					if y1=15 and x1=23 then
						DrawNose6(x1,y1)
					end if
					if y1=16 and x1=23 then
						DrawNose7(x1,y1)
					end if
					if y1=17 and x1=24 then
						DrawNose8(x1,y1)
					end if
					if y1=18 and x1=20 then
						DrawNose9(x1,y1)
					end if
					if y1=19 and x1=20 then
						DrawNose10(x1,y1)
					end if
				end if 
				
			else
				print at y1,x1; " "
			end if 
		next
	next
	if mapNum=2 then
		if achSW=2 and achSOS=2 and achS=2 then
			DrawBathyscaphe(8,9,0)
			map(12,11)=6
			map(11,11)=255
		end if 
	end if 
	DrawMoon()
end sub

function InBathyscaphe(x as ubyte, y as ubyte) as ubyte
	if map(y-1,x)=255 then
		RedrawArea1(x,y)
		RedrawArea1(x,y+1)
		DrawBathyscaphe(8,9,1)
		return 1
	else
		return 0
	end if 
end function

sub DrawMoon()
	Environment6()
	print at 0,3; paper 0; ink 7; "\K\L"	
	print at 1,3; paper 0; ink 7; "\M\N"	
end sub 

sub DrawBathyscaphe(x as ubyte, y as ubyte, driver as ubyte)
	Bathyscaphe()
	print at y,x; paper 1; ink 7; "\A\B\C": print at y,x+3; paper 1; ink 4; "\D\E\F"	
	print at y+1,x; paper 1; ink 7; "\G":
	print at y+1,x+2; paper 1; ink 7; "\H":  print at y+1,x+3; paper 1; ink 4; "\I\J\K"	
	print at y+2,x; paper 1; ink 4; "\L\M\N\O\P\Q"
	if driver=1 then 
		PlayerStaticLeft()
		print at y+1,x+1; paper 1; ink 7; "\A"
	end if 
end sub 

sub RedrawArea1(x as ubyte, y as ubyte)
	if CanDraw(x,y)=0 then return
	bright 0
	dim currentChar2 as ubyte = map2(y,x)
	
	dim nink4 as ubyte
	dim nink5 as ubyte
	dim nink6 as ubyte
	dim nink7 as ubyte
	nink4=4
	nink5=5
	nink6=6
	nink7=7
	if light=0 then 
		nink4=1
		nink5=1
		nink6=1
		nink7=1
	end if 
	Environment()
    dim currentChar as ubyte = map(y,x)
	if currentChar = 1 then print at y,x; paper submarinesank; ink nink7; "\M" 'rocket 1
	if currentChar = 2 then print at y,x; paper submarinesank; ink nink7; "\N" 'rocket 2
	if currentChar = 3 then print at y,x; paper submarinesank; ink nink7; "\O" 'rocket 3
	if currentChar = 4 then print at y,x; paper submarinesank; ink nink7; "\P" 'rocket 4
	if currentChar = 18 then print at y,x; paper submarinesank; ink nink5; "\B" 'terminal
	if currentChar = 15 or currentChar = 23 then print at y,x; paper submarinesank; ink 2; "\K" 'terminal torpedos
	if currentChar = 6 then print at y,x; paper submarinesank; ink nink6; "\S" ' stairs
	if currentChar = 7 then print at y,x; paper submarinesank; ink nink5; "\T" 'tube
	if currentChar = 8 then print at y,x; paper submarinesank; ink 1; "\G" 'bed
	if currentChar = 9 then print at y,x; paper submarinesank; ink 1; "\H" 'bed2
	if currentChar = 17 then print at y,x; paper 1; ink nink5; " " 'water'
	if currentChar = 22 then print at y,x; paper submarinesank; ink 1; "\F" 'accum

	if currentChar = 16 then
		print at y,x; paper submarinesank; ink nink5; "\A" 'floor
	end if
	if currentChar = 19 then print at y,x; paper submarinesank; ink nink4; "\C" 'chair
	if currentChar = 20 then print at y,x; paper submarinesank; ink nink4; "\D" 'chair
	if currentChar = 21 then print at y,x; paper submarinesank; ink 1; "\E" 'table
	
	'if currentChar = 28 and currentChar2 = 0 then Environment2(): DrawBlood(x,y)
	
	if (currentChar = 0 or currentChar = 11 or currentChar = 116) and currentChar2=0 then
		print at y,x; paper submarinesank; " "
	end if
	
	if currentChar = 10 or (currentChar > 49 and currentChar < 70) or (currentChar > 79 and currentChar < 82) then
		Environment4()
		if currentChar = 50 then print at y,x; paper submarinesank; ink nink5; "\A" 'corpus 8
		if currentChar = 51 then print at y,x; paper submarinesank; ink nink5; "\B" 'corpus 4
		if currentChar = 52 then print at y,x; paper submarinesank; ink nink5; "\C" 'corpus 6
		if currentChar = 53 then print at y,x; paper submarinesank; ink nink5; "\D" 'corpus 7
		if currentChar = 54 then print at y,x; paper submarinesank; ink nink5; "\E" 'corpus 9
		if currentChar = 55 then print at y,x; paper 1; ink nink5; "\F" 'luk
		if currentChar = 56 then print at y,x; paper submarinesank; ink nink5; "\G" 'corpus 1 internal
		if currentChar = 57 then print at y,x; paper submarinesank; ink nink5; "\H" 'corpus 3 internal
		if currentChar = 58 then print at y,x; paper submarinesank; ink nink5; "\I" 'corpus 4 with floor
		if currentChar = 59 then print at y,x; paper submarinesank; ink nink5; "\J" 'corpus 6 with floor
		if currentChar = 60 then 
			if map(y,x-1)=10 or map(y,x+1)=10 then 
				print at y,x; paper submarinesank; ink 4; "\K" 'door terminal
			else
				print at y,x; paper submarinesank; ink 2; "\K" 'door terminal
			end if 
		end if 
		if currentChar = 10 then print at y,x; paper submarinesank; ink nink6; "\L" 'door
		if currentChar = 61 then print at y,x; paper submarinesank; ink nink5; "\M" 'corpus 8 5
		if currentChar = 62 then print at y,x; paper submarinesank; ink nink5; "\N" 'corpus 2
		if currentChar = 63 then print at y,x; paper 1; ink nink5; "\O" 'tail
		if currentChar = 64 then print at y,x; paper 1; ink nink5; "\P" 'tail 2
		if currentChar = 65 then 
			if light=1 then
				print at y,x; paper 5; " " 
			else
				print at y,x; paper 1; " " 
			end if 
		end if 
		if currentChar = 66 then print at y,x; paper 1; ink nink5; "\Q" 'tail
		if currentChar = 67 then print at y,x; paper 1; ink nink5; "\R" 'tail 2

		if currentChar = 68 then print at y,x; paper 5; ink 1; "\O" 'tail 2
		if currentChar = 69 then print at y,x; paper 5; ink 1; "\R" 'tail 2

		if currentChar = 80 then print at y,x; paper submarinesank; ink nink5; "\S" 'corp bottom
		if currentChar = 81 then print at y,x; paper 1; ink nink5; "\T" 'corp bottom
	end if

	if (currentChar > 75 and currentChar < 79) then
		Environment5()
		if currentChar = 76 then print at y,x; paper submarinesank; ink nink6; "\M" 'barell
		if currentChar = 77 then print at y,x; paper submarinesank; ink 2; "\N" 'switch off
		if currentChar = 78 then print at y,x; paper submarinesank; ink 1; "\O" 'switch on
	end if 
	if (currentChar > 81 and currentChar < 86) then
		Environment6()
		if currentChar = 82 then print at y,x; paper submarinesank; ink nink7; "\A" 'torpedos
		if currentChar = 83 then print at y,x; paper submarinesank; ink nink7; "\B" '
		if currentChar = 84 then print at y,x; paper submarinesank; ink 1; "\C" ' Box
		if currentChar = 85 then print at y,x; paper submarinesank; ink 1; "\D"
	end if 
	if (currentChar > 85 and currentChar < 105) then
		Tail()
		if currentChar = 86 then print at y,x; paper 1; ink nink5; "\A" 
		if currentChar = 87 then print at y,x; paper 1; ink nink5; "\B" 
		if currentChar = 88 then print at y,x; paper 1; ink nink5; "\C" 
		if currentChar = 89 then print at y,x; paper 1; ink nink5; "\D" 
		if currentChar = 90 then print at y,x; paper 1; ink nink5; "\E"
		if currentChar = 91 then print at y,x; paper 1; ink nink5; "\F"
		if currentChar = 92 then print at y,x; paper 1; ink nink5; "\G"
		if currentChar = 93 then print at y,x; paper 1; ink nink5; "\H"
		if currentChar = 94 then print at y,x; paper 1; ink nink5; "\I"
		if currentChar = 95 then print at y,x; paper 1; ink nink5; "\J"
		if currentChar = 96 then print at y,x; paper 1; ink nink5; "\K"
		if currentChar = 97 then print at y,x; paper 1; ink nink5; "\L"
		if currentChar = 98 then print at y,x; paper 1; ink nink5; "\M"
		if currentChar = 99 then print at y,x; paper 1; ink nink5; "\N"
		if currentChar = 100 then print at y,x; paper 1; ink nink5; "\O"
		if currentChar = 101 then print at y,x; paper 1; ink nink5; "\P"
		if currentChar = 102 then print at y,x; paper 1; ink nink5; "\Q"
		if currentChar = 103 then print at y,x; paper 1; ink nink5; "\R"
		if currentChar = 104 then print at y,x; paper 1; ink nink5; "\S"
	end if 
	if (currentChar > 104 and currentChar < 201) then
		Tail2()
		if currentChar = 105 then print at y,x; paper 1; ink nink5; "\A" 
		if currentChar = 106 then print at y,x; paper 1; ink nink5; "\B" 
		if currentChar = 107 then print at y,x; paper 1; ink nink5; "\C" 
		if currentChar = 108 then print at y,x; paper 1; ink nink5; "\D" 
		if currentChar = 109 then print at y,x; paper 1; ink nink5; "\E"
		if currentChar = 110 then print at y,x; paper 1; ink nink5; "\F"
		if currentChar = 111 then print at y,x; paper 1; ink nink5; "\G"
		if currentChar = 112 then print at y,x; paper 1; ink nink5; "\H"
		if currentChar = 113 then print at y,x; paper 1; ink nink5; "\I"
	end if 
	if (currentChar > 69 and currentChar < 76) or (currentChar2 > 39 and currentChar2 < 46) then
		Environment3()
		if currentChar = 70 then print at y,x; paper submarinesank; ink nink7; "\G" 'left sit
		if currentChar = 71 then print at y,x; paper submarinesank; ink nink7; "\H" 'left sit
		if currentChar = 72 then print at y,x; paper submarinesank; ink nink7; "\I" 'left sit

		if currentChar = 73 then print at y,x; paper submarinesank; ink nink7; "\J" 'right sit
		if currentChar = 74 then print at y,x; paper submarinesank; ink nink7; "\K" 'right sit
		if currentChar = 75 then print at y,x; paper submarinesank; ink nink7; "\L" 'right sit
		if currentChar2 > 39 and currentChar2 < 46 and (currentChar<70 or currentChar>75) then DrawRope2(x,y,currentChar2)
	end if 	
	ink 7
end sub

function CanMoveUpDown(x as ubyte,y as ubyte) as ubyte
	dim k as ubyte = map(y-2,x)
	if k=11 or k=16 or k=61 then return 0
	if map(y,x)=6 then
		return 1
	else
		return 0
	end if
end function

function OnStairs(x as ubyte,y as ubyte) as ubyte
	if map(y+1,x)=6 then return 1
	if map(y+2,x)=6 then return 1
	return 0
end function

'dim rx as ubyte

dim bodyx as ubyte
dim bodyy as ubyte
dim x2 as ubyte
dim y2 as ubyte

sub DragBody()
	map(bodyy,bodyx)=0
	RedrawArea1(bodyx,bodyy)
	
	dim temp as ubyte
	temp = map(bodyy+1,bodyx)
	if temp=71 or temp=72  or temp=74 or temp=75 then map(bodyy+1,bodyx)=0: RedrawArea1(bodyx,bodyy+1)
	temp = map(bodyy+1,bodyx-1)
	if temp=71 or temp=72  or temp=74 or temp=75 then map(bodyy+1,bodyx-1)=0: RedrawArea1(bodyx-1,bodyy+1): x2=bodyx-1
	temp = map(bodyy+1,bodyx+1)
	if temp=71 or temp=72  or temp=74 or temp=75 then map(bodyy+1,bodyx+1)=0: RedrawArea1(bodyx+1,bodyy+1): x2=bodyx+1
	y2 = bodyy
	y1 = bodyy
	x1 = bodyx
	:drag
		'KickSound()
		beep 0.003,-y1+10
		pause 3
		RedrawArea1(x1,y1)
		RedrawArea1(x2,y2)
		Environment3()
		if map2(y1,x1-1)>0 then x2=x1: y2=y1: x1=x1-1: print at y1,x1; ink 7; "\M": print at y2,x2; ink 7; "\N": map2(y1,x1)=0: goto drag
		if map2(y1,x1+1)>0 then x2=x1: y2=y1: x1=x1+1: print at y1,x1; ink 7; "\P": print at y2,x2; ink 7; "\O": map2(y1,x1)=0: goto drag
		if map2(y1-1,x1)>0 then y2=y1: x2=x1: y1=y1-1: print at y1,x1; ink 7; "\Q": print at y2,x2; ink 7; "\R": map2(y1,x1)=0: goto drag
		if map2(y1,x1-1)=0 and map2(y1,x1-2)>0 then map2(y1,x1-1)=40
		if map2(y1,x1+1)=0 and map2(y1,x1+2)>0 then map2(y1,x1+1)=40
	if y1>2 then goto drag
	RedrawArea1(x1,y1)
	RedrawArea1(x2,y2)	
	print at y1,x1; "\Q": print at y2,x2; "\R"
	Environment3()
	print at y1,x1+1; "\J": print at y2,x2+1; "\K\L"
end sub

sub Evacuate(x as ubyte,y as ubyte,bx as ubyte)
	dim k as ubyte
	dim j as ubyte 
	dim h as ubyte
	for y2=0 to 37		
		x2=36-y2	
		DrawMoon()	
		DrawShip(x2,y)	
		if x2+1<32 then print at y-2,x2+1; " ": print at y-1,x2+1; " "	
		if x2-5=x then y=y+1
		if x2=x then
			y=y-1
		end if 
		if y=3 then 
			k=0
		else
			k=2
		end if 
		ink 7
		Environment()
		print at 1,x; "\Q": print at 2,x; "\R"
		
		if y2=0 then Environment3(): print at 1,bx; "\J": print at 2,bx; "\K\L"
		'KickSound()
		h=x2-5 
		if h>31 then h=0
		if x2<32 then
			for j=h to x2
				if j<32 then print at k,j; " "
			next 		
		end if 
		'RedrawArea1(x2,k): RedrawArea1(x2-1,k): RedrawArea1(x2-2,k): RedrawArea1(x2-3,k): RedrawArea1(x2-4,k): RedrawArea1(x2-5,k)	
		'RedrawArea1(x2+1,y-2): RedrawArea1(x2+1,y-1)
		beep 0.005,-20
		Wait()
		Wait()
	next		
	DrawMoon()
	saved=saved+1	
end sub

sub MakeRope2(x as ubyte,y as ubyte, action as ubyte)
	const actionR as ubyte = 1
	const actionL as ubyte = 2
	const actionU as ubyte = 3
	const actionD as ubyte = 4
	if map2(y-1,x) > 0 then map2(y-1,x) = 0
	if x-1>0 then
		if action=2 and map2(y,x-1)>0 then RemoveRope2(1): return
	end if 
	if x+1<31 then 
		if action=1 and map2(y,x+1)>0 then RemoveRope2(1): return
	end if 
	'if (action = 1 or action = 2) and map2(y,x)=41 and rx<>x then RemoveRope2(1): return
	if map2(y,x) = 0 then
		if action = 1 or action = 2 then map2(y,x)=41
		if action = 3 or action = 4 then 
			if OnStairs(x,y)=1 then map2(y,x)=40
		end if 
	end if 
	
	'rx=x
	if action=1 and map2(y,x)=41 and map2(y+1,x)=40 then map2(y,x)=44: RedrawArea1(x,y): return
	if action=2 and map2(y,x)=41 and map2(y+1,x)=40 then map2(y,x)=45: RedrawArea1(x,y): return
	
	if map2(y,x)=41 and map2(y-1,x+1)=40 then map2(y,x+1)=43: RedrawArea1(x+1,y): return
	if map2(y,x)=41 and map2(y+1,x+1)=40 then map2(y,x+1)=45: RedrawArea1(x+1,y): return
	if map2(y,x)=41 and map2(y-1,x-1)=40 then map2(y,x-1)=42: RedrawArea1(x-1,y): return
	if map2(y,x)=41 and map2(y+1,x-1)=40 then map2(y,x-1)=44: RedrawArea1(x-1,y): return
	
	if map2(y,x)=40 and map2(y-1,x+1)=41 then map2(y-1,x)=44: RedrawArea1(x,y-1): return
	if map2(y,x)=40 and map2(y+1,x+1)=41 then map2(y+1,x)=42: RedrawArea1(x,y+1): return
	if map2(y,x)=40 and map2(y-1,x-1)=41 then map2(y-1,x)=45: RedrawArea1(x,y-1): return
	if map2(y,x)=40 and map2(y+1,x-1)=41 then map2(y+1,x)=43: RedrawArea1(x,y+1): return
	
	if map2(y,x)=41 and map2(y,x-1)=40 then map2(y,x)=44: RedrawArea1(x,y): return
	if map2(y,x)=41 and map2(y,x+1)=40 then map2(y,x+1)=45: RedrawArea1(x,y+1): return
	
	if map2(y,x)=40 and map2(y,x+1)=45 then map2(y,x)=42: RedrawArea1(x,y): return
	if map2(y,x)=40 and map2(y,x-1)=44 then map2(y,x)=43: RedrawArea1(x,y): return
		
	if map2(y,x)=40 and map2(y,x-1)=40 then map2(y,x-1)=44: RedrawArea1(x-1,y): map2(y,x)=43: RedrawArea1(x,y): return
	if map2(y,x)=40 and map2(y,x+1)=40 then map2(y,x)=42: RedrawArea1(x,y): map2(y,x+1)=45: RedrawArea1(x+1,y): return
end sub

sub RemoveRope2(sfx as ubyte)
	if catched = 0 then return
	catched = 0
	if sfx=1 then Shock()
	for x1=0 to 31
		for y1=0 to 20
			if map2(y1,x1)>0 then map2(y1,x1)=0: RedrawArea1(x1,y1)
		next
	next
end sub 

function CanFall(x as ubyte,y as ubyte, alive as ubyte) as ubyte
	dim value as ubyte
	value = map(y+2,x)
	if alive = 1 then
		if value=0 or value=17 then
			return 1
		else
			return 0
		end if
	else
		if value=0 or value=17 then
			return 1
		else
			return 0
		end if
	end if
end function

sub CanCatch1(x as ubyte,y as ubyte, shift as ubyte)
	if catched = 0 and achSOS>0 then
		if map(y,x+shift) = 70 or map(y,x+shift) = 73 then
			bodyx = x+shift
			bodyy = y
			catched = 1
			KickSound()
		end if 
	end if 
end sub 

function CheckMovement1(value as ubyte) as ubyte
	if value=0 or value=6 or value=8 or value=9 or value=11 or value=85 or (value>16 and value<23) or (value>69 and value<79) or value=222 then
		return 1
	end if 
	return 0
end function

function CheckMovement2(value as ubyte) as ubyte
	if value=0 or value=6 or value=8 or value=9 or value=11 or value=84 or (value>16 and value<24) or value=60 or value=18 or value=15 or (value>69 and value<79) then
		return 1
	end if 
	return 0
end function

function CanMoveLeft(x as ubyte,y as ubyte) as ubyte
	if x=0 then return 0
	dim res as ubyte = 0
	'CanCatch(x,y,-2)
	dim value as ubyte
	value = map(y+1,x-1)
	res=CheckMovement1(value)
	value = map(y,x-1)
	if res = 1 then
		res=CheckMovement2(value)
	end if
	return res
end function

function CanMoveRight(x as ubyte,y as ubyte) as ubyte
	if x+1>31 then return 0
	dim res as ubyte 
	'CanCatch(x,y,2)
	res = 0
	dim value as ubyte
	value = map(y+1,x+1)
	res=CheckMovement1(value)
	value = map(y,x+1)
	if res = 1 then
		res=CheckMovement2(value)
	end if
	return res
end function

sub DoorSound(open as ubyte)
	dim i as ubyte 
	if open=1 then 
		for i=0 to 5
			beep 0.003,-5+i
		next
	else
		for i=0 to 5
			beep 0.003,-5-i
		next
	end if 
end sub 

function IsSoundLong(s as uinteger) as ubyte
	if s=0 then return 2
	if s<9 then
		return 0
	else
		return 1
	end if 
end function

sub RefreshDoor(x as ubyte, y as ubyte, a as ubyte, b as ubyte)
	if a=1 then 
		map(y,x+1)=b
		map(y+1,x+1)=b
		RedrawArea1(x+1,y)
		RedrawArea1(x+1,y+1)
		RedrawArea1(x+2,y)		
	else
		map(y,x-1)=b
		map(y+1,x-1)=b
		RedrawArea1(x-1,y)
		RedrawArea1(x-1,y+1)
		RedrawArea1(x-2,y)		
	end if 
	DoorSound(0)
end sub

function ActivateTerminal(x as ubyte, y as ubyte) as ubyte	
	dim value as ubyte
	value = map(y,x)
	if value=77 then
		map(y,x)=78
		light=1
		SaveLevel1(2)
		DrawLevel1(2)
		DrawUI1()
		return 1
	end if 
	if value=60 then
		if map(y,x+1)=10 then
			RefreshDoor(x,y,1,11)
			return 1
		end if 
		if map(y,x-1)=10 then
			RefreshDoor(x,y,2,11)
			return 1
		end if 
		if catched=1 then return 0
		if map(y,x+1)=11 then
			RefreshDoor(x,y,1,10)
			return 1
		end if 
		if map(y,x-1)=11 then
			RefreshDoor(x,y,2,10)
			return 1
		end if 
		return 0
	end if 
	if light=0 then return 0

	dim i as ubyte
	dim j as ubyte
	dim k as ubyte
	k=0
	if value = 23 and achSOS=0 then
		Environment3()
		ink 4
		paper 0
		for i=9 to 22
			print at 7,i; ink 4; paper 0; "\B"
			for j=8 to 12
				if i=9 or i=22 then
					print at j,i; ink 4; paper 0; "\A"
				else
					print at j,i; " "
				end if
			next j
			print at 13,i; ink 4; paper 0; "\B"
			print at 7,9; ink 4; paper 0; "\E"
			if i=22 then print at 7,22; ink 4; paper 0; "\F"
			print at 13,9; ink 4; paper 0; "\C"
			if i=22 then print at 13,22; ink 4; paper 0; "\D"
			beep .002,i
		next i
		SOS()
		print at 10,15; paper 0; ink 7; "\A\B"
		dim soslength as uinteger
		soslength=0
		dim sosstep as ubyte
		sosstep=0
		:callsos
		if sosstep=9 then 
			achSOS=1
			goto finishcallsos
		end if
		if k=9 then goto finishcallsos
		if MultiKeys(keyFire)>0 then
			print at 10,15; paper 0; ink 7; "\C\D"
			beep .005,50
			soslength=soslength+1
			Wait()
			'print at 1,0; paper 0; ink 7; str(soslength)+" "
		else
			if soslength>0 then k=k+1
			print at 10,15; paper 0; ink 7; "\A\B"	
			'print at 0,0; paper 0; ink 7; sosstep	
			Wait()			
			if sosstep>=0 and sosstep<3 then 
				if IsSoundLong(soslength)=0 then
					sosstep=sosstep+1
					soslength=0
					goto callsos
				end if
				if IsSoundLong(soslength)=1 then
					sosstep=0
				end if 
			end if 				
			if sosstep>2 and sosstep<6 then 
				if IsSoundLong(soslength)=1 then
					sosstep=sosstep+1
					soslength=0
					goto callsos
				end if
				if IsSoundLong(soslength)=0 then
					sosstep=0
				end if 
			end if 
			if sosstep>5 and sosstep<9 then 
				if IsSoundLong(soslength)=0 then
					sosstep=sosstep+1
					soslength=0
					goto callsos
				end if
				if IsSoundLong(soslength)=1 then
					sosstep=0
				end if 
			end if
			soslength=0
		end if 
		goto callsos
		:finishcallsos
		for i=9 to 22
			for j=7 to 13
				RedrawArea1(i,j)
			next j
		next i
		return 1
	end if
	if value = 15 and achSOS>0 and achS>0 then
		if achSW>0 then return 0
		Environment3()
		ink 4
		paper 0
		for i=9 to 22
			print at 7,i; ink 4; paper 0; "\B"
			for j=8 to 12
				if i=9 or i=22 then
					print at j,i; ink 4; paper 0; "\A"
				else
					if j>10 then
						paper 1
					else
						paper 0
					end if
					print at j,i; " "
				end if
			next j
			print at 13,i; ink 4; paper 0; "\B"
			print at 7,9; ink 4; paper 0; "\E"
			if i=22 then print at 7,22; ink 4; paper 0; "\F"
			print at 13,9; ink 4; paper 0; "\C"
			if i=22 then print at 13,22; ink 4; paper 0; "\D"
			beep .002,i
		next i

		Environment6()
		dim torps as ubyte=10
		dim aimx as ubyte
		aimx=0
		dim aimshift as ubyte
		aimshift=1
		:nextship
		dim ship as ubyte
		if int(rnd*1)=0 then
			ship=int(rnd*8)
		else
			ship=int(rnd*11)+19
		end if
		:torpedos
		DrawEnemyShip(ship,0)
		if enemyships=5 then achSW=1: goto finishtorpedos
		dim temp as ubyte
		temp=0
		if torps=0 then goto finishtorpedos
			if MultiKeys(keyRight)>0 then
				DrawEnemyShip(ship,1)
				if ship=0 then ship=30
				ship=ship-1
				temp=1
			end if 
			if MultiKeys(keyLeft)>0 then
				DrawEnemyShip(ship,1)
				if ship=30 then ship=0
				ship=ship+1
				temp=1				
			end if 
			if temp=1 then
				DrawEnemyShip(ship,0)		
				KickSound()		
			end if 
			if aimshift=1 then 
				aimx=aimx+1
			else
				aimx=aimx-1
			end if 
			if aimx>7 then aimshift=0
			if aimx<1 then aimshift=1
			print at 9,aimx+10; paper 0; ink 7; " \E\F "
			Wait()
			Wait()	
			if MultiKeys(keyFire)>0 then
				Shock()
				torpcount=torpcount-1
				DrawUI1()
				print at 12,aimx+11; ink 5; paper 1; "\P\Q"
				for i=0 to 14
					Wait()
					ScrollUp((aimx+11)*8,87,8+(aimx+11)*8,103)
					beep 0.003, i
					Wait()	
				next
				if ship=aimx+11 then
					enemyships=enemyships+1
					for i=0 to 8
						Wait()
						ScrollDown((aimx+11)*8,102,8+(aimx+11)*8,110)
						beep 0.003, -i
						Wait()
					next
					DrawUI1()
					goto nextship
				end if
			end if 	
			Wait()
			Wait()
		goto torpedos
		:finishtorpedos
		for i=9 to 22
			for j=7 to 13
				RedrawArea1(i,j)
			next j
		next i
		DrawNose1(20,10)
		return 1
	end if 
	return 0
end function 

'sub SetSinkingSpeed1(sinkingspeed as ubyte)
''	sinkingspeed1=sinkingspeed
'end sub

sub DrawEnemyShip(x as ubyte, clr as ubyte)
	if x>9 and x<22 then
		if clr = 1 then
			print at 10,x; paper 0; " "
		else
			print at 10,x; paper 0; ink 4; "\G"
		end if 
	end if 
	if x+1>9 and x+1<22 then
		if clr = 1 then
			print at 10,x+1; paper 0; " "
		else
			print at 10,x+1; paper 0; ink 4; "\H"
		end if 
	end if
	dim f as float
	f = x
	if f/2=int(f/2) then
		print at 11,10; paper 1; ink 5; "\I\J\I\J\I\J\I\J\I\J\I\J"
	else
		print at 11,10; paper 1; ink 5; "\J\I\J\I\J\I\J\I\J\I\J\I"
	end if 	
end sub 

'function PlayerTookItem1(x as ubyte,y as ubyte) as ubyte
''	dim value as ubyte
''	value = map(y,x)
''	if value=7 then map(y,x)=0: return 1
''	if value=8 then map(y,x)=0: return 2
''	if value=10 then map(y,x)=0: return 4
''	if value=88 then map(y,x)=0: return 5
''	if value=99 then return 99
''	if value=97 then return 97
''   return 0
'end function

'sub RecoverEnvironment(x as ubyte, y as ubyte)
''	if map(y-1,x-1) = 31 then map(y,x-1)=29
''	if map(y-1,x) = 31 then map(y,x)=29
''	if map(y-1,x+1) = 31 then map(y,x+1)=29
''	if map(y-1,x+1) = 32 then map(y,x+1)=30
''	if map(y-1,x) = 32 then map(y,x)=30
''	if map(y-1,x-1) = 32 then map(y,x-1)=30	
''	
''	if map(y,x-1) = 29 then map(y,x)=30
''	if map(y,x+1) = 29 and x+2<31 then map(y,x+2)=30
''	if map(y,x+2) = 29 and x+3<31 then map(y,x+3)=30
''	if map(y,x+1) = 30 then map(y,x)=29
''	if map(y,x-1) = 30 and x-2>0 then map(y,x-2)=29
''	if map(y,x-2) = 30 and x-3>0 then map(y,x-3)=29
'end sub 

'function PlayerSearch1(x as ubyte, y as ubyte, lshield as ubyte, lammo as ubyte, llife as ubyte) as ubyte
''	if x=0 then return 0
''	if x=31 then return 0
''	dim value as ubyte
''	value = map(y,x)
''	if value>=12 and value<=15 then		
''		'ShowTakeMenu(lshield, lammo, llife)
''		map(y,x)=0
''		if (map(y,x-1)>=12 and map(y,x-1)<=15) then map(y,x-1)=0
''		if (map(y,x+1)>=12 and map(y,x+1)<=15) then map(y,x+1)=0
''		RecoverEnvironment(x,y)
''		return 1
''	end if
'end function

sub DrawShip(x as ubyte,y as ubyte)
	Environment5()
	ink 4
	if x-5<33 and x-5>=0 then print at y-2,x-5; bright 1; "\A": print at y-1,x-5; bright 1; "\G"
	if x-4<32 and x-4>=0 then print at y-2,x-4; bright 1; "\B": print at y-1,x-4; bright 0; "\H"
	if x-3<32 and x-3>=0 then print at y-2,x-3; bright 1; "\C": print at y-1,x-3; bright 0; "\I"
	if x-2<32 and x-2>=0 then print at y-2,x-2; bright 1; "\D": print at y-1,x-2; bright 0; "\J"
	if x-1<32 and x-1>=0 then print at y-2,x-1; bright 1; "\E": print at y-1,x-1; bright 0; "\K"
	if x<32 and x>=0 then print at y-2,x; bright 1; "\F": print at y-1,x; bright 0; "\L"
end sub 

'sub DrawBlood(x as ubyte, y as ubyte)
''	paper 0
''    print at y,x; ink 2; "\A"
'end sub

sub DrawRope2(x as ubyte, y as ubyte, mapcode as ubyte)
	ink 6
	paper 0
	if mapcode = 40 then print at y,x; "\A"
	if mapcode = 41 then print at y,x; "\B"
	if mapcode = 42 then print at y,x; "\C"
	if mapcode = 43 then print at y,x; "\D"
	if mapcode = 44 then print at y,x; "\E"
	if mapcode = 45 then print at y,x; "\F"
end sub

function FASTCALL GetKeyScanCode AS UInteger
    asm
		PROC
		LOCAL END_KEY
		LOCAL LOOP

		ld l, 1
		ld a, l
	LOOP:
		cpl
		ld h, a
        in a, (0FEh)
        cpl
		and 1Fh
		jr nz, END_KEY

		ld a, l
		rla
		ld l, a
		jr nc, LOOP
		ld h, a
	END_KEY:
		ld l, a
		ENDP
    end asm
end function

sub Click()
	dim v as ubyte
	for v = 1 to 7
		beep 0.005,v
	next v
end sub

'sub Click2()
''	dim v as ubyte
''	for v = 1 to 3
''		beep 0.005,v
''	next v
'end sub

sub Shock()
	dim v as ubyte
	for v = 50 to 40 step -1
		beep 0.005,v
	next v
end sub

sub KickSound()
	beep 0.0004,5
	beep 0.0003,7
end sub